## -*- coding: utf-8 -*-
<%include file="HEADER.tmpl"/>
<%
  if status == "FINISHED":
    statusy = "alert-success"
  elif status.startswith("ABORT"):
    statusy = "alert-warning"
  elif status == "CREATED" or status == "RUNNING" or status == "STARTED" or status == "STARTING" or status == "INITIALIZING":
    statusy = "alert-info"
  elif status == "ERROR-FAILED":
    statusy = "alert-danger"
  else:
    statusy = "alert-info"
  end
%>
<h2>${name}&nbsp;<span id='scanstatusbadge' class='badge ${statusy}'>${status}</span>&nbsp;<img id="loader" src="${docroot}/static/img/loader.gif"></h2>
  <div class="btn-toolbar" role="toolbar" style='padding-bottom: 10px'>
   <div class="btn-group">
      <a id='btn-status' class="btn btn-default" onClick='scanSummaryView("${id}")'><i class='glyphicon glyphicon-eye-open'></i>&nbsp;概括</a>
      <a id='btn-browse' class="btn btn-default" onClick='browseEventList("${id}")'><i class='glyphicon glyphicon-th-list'></i>&nbsp;浏览</a>
      <a id='btn-graph' class="btn btn-default" onClick='graphEvents("${id}")'><i class='glyphicon glyphicon-asterisk'></i>&nbsp;图表显示</a>
      <a id='btn-info' class="btn btn-default" onClick='viewScanConfig("${id}")'><i class='glyphicon glyphicon-cog'></i>&nbsp;扫描设置</a>
      <a id='btn-log' class="btn btn-default" onClick='viewScanLog("${id}")'><i class='glyphicon glyphicon-book'></i>&nbsp;日志</a>
    </div>
    <div class='btn-group pull-right'>
        <div id='btn-search' class='input-group pull-right'>
          <input class='form-control' id='searchvalue' type='text' placeholder='搜索...' data-toggle='popover' data-html='true' data-animation='true' data-title='使用方法' data-content="提供封装在'/'中的表达式, 例如<i>/searchregex/</i>或者简单的通配符查询, 例如<i>*string*</i>或精确的字符串.<br /><br /><b>注意</b><br />搜索的是当前范围.">
            <div class='input-group-btn' style='width: 0px'> <!-- Chrome fix -->
              <button class='btn btn-primary' id='searchbutton' type='button' onClick="$('#btn-search').popover('toggle');searchDirector('${id}')">
                <i class='glyphicon glyphicon-search glyphicon glyphicon-white'></i>
              </button>
            </div>
        </div>
    </div>
        <div class="btn-group pull-right" role="group">
            <button id='btn-refresh' rel="tooltip" title="刷新" class="btn btn-success btn-default" onClick='refresh()'><i class='glyphicon glyphicon-refresh glyphicon glyphicon-white'></i></button>
            <button id='btn-download-logs' rel="tooltip" data-title="下载扫描日志" class="btn btn-default download-button" onClick='downloadLogs("${id}")'><i class='glyphicon glyphicon-download-alt glyphicon glyphicon-white'></i></button>
            <a id='btn-export' rel="tooltip" data-title="导出数据" class="btn btn-default dropdown-toggle download-button" data-toggle="dropdown"><i class='glyphicon glyphicon-download-alt glyphicon glyphicon-white'></i></a>
            <ul class="dropdown-menu">
              <li><a class='link' onClick='exportEventData("${id}", currentType, "csv")'>CSV</a></li>
              <li><a class='link' onClick='exportEventData("${id}", currentType, "excel")'>Excel</a></li>
            </ul>
        </div>
        <div id='customtabview' role="group" class="btn-group pull-right">
         <a id='btn-fullview' rel="tooltip" data-title="完整数据视图" class="btn btn-default active" onClick='browseUpdate("full")'><i class='glyphicon glyphicon-th glyphicon glyphicon-white'></i></a>
         <a id='btn-uniqueview' rel="tooltip" data-title="唯一数据视图" class="btn btn-default" onClick='browseUpdate("unique")'><i class='glyphicon glyphicon-align-justify glyphicon glyphicon-white'></i></a>
         <a id='btn-vizview' rel="tooltip" data-title="联想数据视图" class="btn btn-default dropdown-toggle" data-toggle="dropdown"><i class='glyphicon glyphicon-picture glyphicon glyphicon-white'></i></a>
         <ul class="dropdown-menu">
            <li><a class='link' onClick='browseUpdate("viz-bubble-data")'>气泡 (数据元素)</a></li>
            <li><a class='link' onClick='browseUpdate("viz-bubble-source")'>气泡 (源数据元素)</a></li>
            <li><a class='link' onClick='browseUpdate("viz-dendro")'>扫描发现路径</a></li>
         </ul>
        </div>
        <div id='customvizview' class="btn-group pull-right">
         <a id='btn-random' rel="tooltip" data-title="随机布局" class="btn btn-default active" onClick='vizUpdate("random")'><b>R</b></a>
         <a id='btn-forceatlas' rel="tooltip" data-title="部队布局" class="btn btn-default" onClick='vizUpdate("force")'><b>F</b></a>
         <a id='btn-saveimage' rel="tooltip" data-title="保存图片" class="btn btn-default dropdown-toggle" onClick='vizUpdate("download")'><i class='glyphicon glyphicon-picture glyphicon glyphicon-white'></i></a>
        </div>
        <div id='modifyactions' role="group" class="btn-group pull-right">
            <a id='btn-setfp' rel="tooltip" data-title="设置或者取消误报" class="btn-warning btn btn-default dropdown-toggle" data-toggle="dropdown"><i class='glyphicon glyphicon-ban-circle glyphicon glyphicon-white'></i></a>
            <ul class="dropdown-menu">
                <li><a href='#' class='link' onClick='setFp(1)'>设置为误报</a></li>
                <li><a href='#' class='link' onClick='setFp(0)'>取消误报</a></li>
            </ul>
        </div>
  </div>
    <script src="${docroot}/static/node_modules/sigma/build/sigma.min.js"></script>
    <script src="${docroot}/static/node_modules/sigma/build/plugins/sigma.parsers.json.min.js"></script>
    <script src="${docroot}/static/node_modules/sigma/build/plugins/sigma.plugins.dragNodes.min.js"></script>
    <script src="${docroot}/static/node_modules/sigma/build/plugins/sigma.layout.forceAtlas2.min.js"></script>
    <script src="${docroot}/static/node_modules/sigma/build/plugins/sigma.renderers.snapshot.min.js"></script>
    <script type='text/javascript'>
        var currentType = "ALL";
        var currentTypeName = "All";
        var currentSection = "btn-browse";
        var lastSearchType = "ALL";
        var lastSearchQuery = "";
        var dataloaders = [];
        var sharedSigma = "";
        var loadersrunning = false;
        var refresh = function() { browseEventList("${id}"); }
        $('#searchvalue').popover({ 'trigger': 'focus', 'placement': 'bottom'});
        $('#searchvalue').keyup(function(event) {
            if (event.keyCode == 13) {
                $('#searchbutton').click();
            }
        });

        function switchSelectAll() {
            if (!$("#checkall")[0].checked) {
                $("input[id*=cb_]").prop('checked', false);
            } else {
                $("input[id*=cb_]").prop('checked', true);
            }
        }

        function getSelected() {
            ids = [];
            $("input[id*=cb_]").each(function(i, obj) {
                if (obj.checked) {
                    ids[ids.length] = obj.id.replace("cb_", "");
                }
            });

            return ids;
        }

        function setFp(flag) {
            sel = getSelected();
            if (sel.length == 0) {
                alertify.error("你至少选择一条记录吧.");
                return false;
            }
            data = JSON.stringify(sel);
            $("#loader").show();
            GhostOsint.fetchData('${docroot}/resultsetfp', {'id': '${id}', 'fp': flag, 'resultids': data }, function(ret) {
                $("#loader").hide();
                if (ret[0] == "SUCCESS") {
                    refresh();
                    return;
                }
                if (ret[0] == "WARNING") {
                    alertify.error(ret[1]);
                    return;
                }
                if (ret[0] == "ERROR") {
                    alertify.error("设置误报时出错，因为: " + ret[1] + "<br/>如果你认为这是一个错误，请刷新并重试，如果还有错误，请联系我解决该BUG.");
                }
            });
        }

        function navTo(target) {
            var targets = [ "btn-browse", "btn-info", "btn-log",
                "btn-export", "btn-download-logs", "btn-viz", "btn-status", "btn-graph" ]
            for (var i = 0; i < targets.length; i++) {
                if (targets[i] == target) {
                    $("#" + targets[i]).addClass("active");
                } else {
                    $("#" + targets[i]).removeClass("active");
                }
            }

            $("#breadcrumbs").remove();
            $("#customtabview").hide();
            $("#customvizview").hide();
            $("#modifyactions").hide();
            currentSection = target
            dataloaders = []
        }

        function searchDirector(instanceId) {
            qry = $("#searchvalue").val();
            if (currentType == "ALL") {
                searchResults(instanceId, qry);
            } else {
                searchResults(instanceId, qry, currentType);
            }
        }

        function searchResults(instanceId, query, typeName) {
            // Remove pre-existing tables if they exist
            $("#scansummary-content").remove();
            $("#scanlogs-content").remove();
            navTo("btn-search");
            $("#modifyactions").hide();
            $("#loader").show();
            $("#btn-export").show();
            $("#btn-download-logs").hide();
            $("#btn-refresh").show();
            $("#btn-search").show();
            $("#scanreminder").hide();
            refresh = function() { searchResults(instanceId, query, typeName); }
            GhostOsint.search(instanceId, query, typeName, function(data) {
                            lastSearchType = typeName;
                            lastSearchQuery = query;
                            var crumbs = " <ul class='breadcrumb' id='breadcrumbs'> <li><a class='link' onClick='browseEventList(\"" + instanceId + "\");'>浏览</a>";
                            crumbs += " <span class='divider'></span></li>";
                            if (typeName != null) {
                                crumbs += " <li><a class='link' onClick=";
                                crumbs += "'browseEventData(\"" + instanceId + "\",\"" + currentTypeName + "\",\"" + typeName + "\",\"full\");'>";
                                crumbs += unescape(currentTypeName) + "</a><span class='divider'></span></li>";
                            }
                            crumbs += "<li>搜索结果";
                            crumbs += " (" + data.length + " records)</li></ul>";

                            if (data.length == 0) {
                                var table = "<div id='scansummary-content'>&nbsp;&nbsp;没有找到查询的结果，尝试扩大范围吧.</div>";
                            } else {
                                var table = "<table id='scansummary-content' class='table table-bordered table-striped small tablesorter'><thead><tr>";
                                if (typeName == null) {
                                    table += "<th class='sorter-false'>数据元素类型</th>";
                                }
                                table += "<th>数据元素</th><th>源数据元素</th><th>源模块</th><th>已确定</th></tr></thead><tbody>";
                                for (var i = 0; i < data.length; i++) {
                                    table += "<tr>";
                                    if (typeName == null) {
                                        table += "<td><pre class='table-border-bg-inherit'>" + data[i][8] + "</pre></td>";
                                    }
                                    table += "<td><pre class='table-border-bg-inherit'>";
                                    table += GhostOsint.replace_sfurltag(data[i][1]);
                                    // for debug
                                    table += "</pre></td><td><pre class='table-border-bg-inherit'>";
                                    table += GhostOsint.replace_sfurltag(data[i][2]);
                                    table += "</pre></td><td><pre class='table-border-bg-inherit'>" + data[i][3];
                                    table += "</pre></td><td><pre class='table-border-bg-inherit'>" + data[i][0];
                                    table += "</pre></td>";
                                    table += "</tr>";
                                }
                                table += "</tbody></table>"
                            }
                            $("#loader").fadeOut(500);
                            $("#mainbody").append(crumbs + table);
                            $("#scansummary-content").tablesorter();
            });
        }

        // Visualisation
        function graphEvents(instanceId) {
            grid = "<div id='scansummary-content'><br />"
            grid += "<div class='col-md-12 graph-container' id='graph-container'></div>"
            grid += "</div>"

            $("#scansummary-content").remove();
            $("#scanlogs-content").remove();
            $("#loader").show();
            $("#btn-export").show();
            $("#btn-download-logs").hide();
            $("#btn-refresh").show();
            $("#btn-search").hide();
            $("#btn-graph").show();
            $("#scanreminder").hide();
            refresh = function() { graphEvents(instanceId); }
            navTo("btn-graph");
            $("#customvizview").show();
            $("#mainbody").append(grid);
            $("#btn-forceatlas").removeClass("active");
            $("#btn-random").addClass("active");

            sigma.renderers.def = sigma.renderers.canvas
            sigma.parsers.json("${docroot}/scanviz?id=" + instanceId + "&gexf=0", {
                container: 'graph-container'
            }, function(s) {
                if (s.renderers[0].nodesOnScreen.length == 0) {
                    $("#graph-container").append("<div class='alert alert-danger'>数据不足无法生成图表.</div>");
                    $("#loader").hide();
                    return;
                }
                sharedSigma = s;
                s.settings({
                    edgeColor: 'default',
                    defaultEdgeColor: '#aaa',
                    maxNodeSize: 5
                });
                sigma.plugins.dragNodes(s, s.renderers[0])
                s.refresh()
                $("#loader").hide();
            });
        }

        function vizUpdate(method) {
            s = sharedSigma
            if (method == "force") {
                $("#btn-forceatlas").addClass("active");
                $("#btn-random").removeClass("active");
                s.startForceAtlas2();
                s.refresh();
                setTimeout(function() { s.stopForceAtlas2() }, 5000);
            }

            if (method == "random") {
                $("#btn-forceatlas").removeClass("active");
                $("#btn-random").addClass("active");
                refresh();
            }

            if (method == "download") {
                s.renderers[0].snapshot({download: true});
            }
        }

        // Scan status
        function scanSummaryView(instanceId) {
            grid = "<div id='scansummary-content'>"
            grid += "<div class='row'>"
            grid += "<div class='col-md-12 text-center'>"
            grid += "<div class='btn-toolbar'>";
            grid += "<div class='btn-group' style='float: unset; padding: 10px'><button class='btn disabled btn-lg btn-secondary' style='cursor: default;'>总数</span></button>"
            grid += "<button class='btn disabled btn-lg btn-default' id='tcounter' style='cursor: default;'>?</button></div>"
            grid += "<div class='btn-group' style='float: unset; padding: 10px'><button class='btn disabled btn-lg btn-secondary' style='cursor: default;'>独特</button>"
            grid += "<button class='btn disabled btn-lg btn-default' id='ucounter' style='cursor: default;'>?</button></div>"
            grid += "<div class='btn-group' style='float: unset; padding: 10px'><button class='btn disabled btn-lg btn-secondary' style='cursor: default;'>状态</button>"
            grid += "<button class='btn disabled btn-lg btn-default' id='status' style='cursor: default;'>?</button></div>"
            grid += "<div class='btn-group' style='float: unset; padding: 10px'><button class='btn disabled btn-lg btn-secondary' style='cursor: default;'>错误</button>"
            grid += "<button class='btn disabled btn-lg btn-default' id='errors' style='cursor: default;'>?</button></div>"
            grid += "</div></div></div><br />"
            grid += "<div class='row'>"
            grid += "<div class='col-md-12' id='vbarsummary'></div>"
            grid += "</div><br />"
            grid += "<div class='row'>"
            grid += "<div class='col-md-12' id='logtable'></div>"
            grid += "</div></div>"

            $("#scansummary-content").remove();
            $("#scanlogs-content").remove();
            $("#loader").show();
            $("#btn-export").hide();
            $("#btn-download-logs").hide();
            $("#btn-refresh").hide();
            $("#btn-search").hide();
            $("#scanreminder").show();
            navTo("btn-status");

            $("#mainbody").append(grid);

            // Collect data and populate variables for use later
            dataloaders.push(
                function() {
                    GhostOsint.fetchData('${docroot}/scanstatus', {'id': instanceId}, function(data) {
                        scanName = data[0];
                        scanTarget = data[1];
                        scanStarted = data[2];
                        scanEnded = data[4];
                        scanStatus = data[5];
                    });
                }
            );

            dataloaders.push(
                function() {
                    GhostOsint.fetchData('${docroot}/scanerrors', {'id': instanceId}, function(data) {
                        $("#errors").html(data.length);
                    });
                }
            );

            dataloaders.push(
                function() {
                    GhostOsint.fetchData('${docroot}/scansummary', {'id': instanceId, 'by': 'type'}, function(data) {
                        scanSummary = [];
                        totalCount = 0;
                        uniqueCount = 0;
                        for (i = 0; i < data.length; i++) {
                            scanSummary[i] = {};
                            scanSummary[i].scanId = instanceId;
                            scanSummary[i].id = data[i][0];
                            scanSummary[i].name = data[i][1];
                            scanSummary[i].total = data[i][3];
                            scanSummary[i].counter = data[i][4];
                            scanSummary[i].link = function(d) { return browseEventData(d.scanId, d.name, d.id, "full"); };
                            totalCount += data[i][3];
                            uniqueCount += data[i][4];
                            scanStatus = data[i][5];
                        }

                        for (x = 0; x < i; x++) {
                            scanSummary[x].pct = scanSummary[x].counter / uniqueCount;
                        }

                        $('#ucounter').html(uniqueCount);
                        $('#tcounter').html(totalCount);
                        $('#scanstatusbadge').html(scanStatus);

                        var statusy = "";
                        if (scanStatus == "FINISHED") {
                            statusy = "alert-success";
                        } else if (scanStatus.indexOf("ABORT") >= 0) {
                            statusy = "alert-warning";
                        } else if (scanStatus == "CREATED" || scanStatus == "RUNNING" || scanStatus == "STARTED" || scanStatus == "STARTING" || scanStatus == "INITIALIZING") {
                            statusy = "alert-info";
                        } else if (scanStatus.indexOf("FAILED") >= 0) {
                            statusy = "alert-danger";
                        } else {
                            statusy = "alert-info";
                        }
                        $('#scanstatusbadge').removeClass(["alert-info", "alert-warning", "alert-danger"]).addClass(statusy);
                        $('#status').html(scanStatus);
                        $("#vbarsummary").empty();
                        if (scanSummary.length == 0) {
                          $("#vbarsummary").append("<div id='scansummary-content' class='alert alert-warning'><h4>没有数据.</h4>如果扫描正在运行，那么很快啊，这里就会更新数据.</div>");
                        } else {
                          sf_viz_vbar("#vbarsummary", scanSummary);
                        }
                        $("#loader").fadeOut(500);
                    });
                }
            );

            loadersrunning = true;
            for (var i = 0; i < dataloaders.length; i++) {
                dataloaders[i]();
            }
            loadersrunning = false;
        }

        // Logs for the scan
        function viewScanLog(instanceId) {
            $("#scansummary-content").remove();
            $("#scanlogs-content").remove();
            $("#loader").show();
            $("#btn-search").hide();
            $("#btn-export").hide();
            $("#btn-download-logs").show();
            $("#scanreminder").hide();
            navTo("btn-log");
            refresh = function() { viewScanLog(instanceId); }
            GhostOsint.fetchData('${docroot}/scanlog', {'id': instanceId}, function(data) {
                            var table = "<table id='scanlogs-content' class='table table-bordered table-striped table-condensed small tablesorter' style='table-layout: fixed'>";
                            table += "<thead><tr><th>时间</th><th>部件</th><th>类型</th><th>事件</th></tr></thead><tbody>";
                            for (var i = 0; i < data.length; i++) {
                                if (data[i][2] == "ERROR") {
                                  table += "<tr class='danger'>";
                                } else {
                                  table += "<tr>";
                                }
                                table += "<td>" + data[i][0] + "</a></td>";
                                table += "<td>" + data[i][1] + "</td>";
                                table += "<td>" + data[i][2] + "</td>";
                                table += "<td>" + data[i][3] + "</td>";
                                table += "</tr>";
                            }
                            table += "</tbody></table>";
                            $("#loader").fadeOut(500);
                            $("#mainbody").append(table);
                            $("#scanlogs-content").tablesorter({widgets: ["filter"], widgetOptions : { filter_searchDelay : 300, filter_hideFilters : false }});
            });
        }

        // Summary of event types and counts for a scan
        function browseEventList(instanceId) {
            currentType = "ALL";
            currentTypeName = "All";

            // Remove pre-existing tables if they exist
            $("#scansummary-content").remove();
            $("#scanlogs-content").remove();
            navTo("btn-browse");
            $("#loader").show();
            $("#btn-export").show();
            $("#btn-download-logs").hide();
            $("#btn-refresh").show();
            $("#btn-search").show();
            $("#scanreminder").hide();
            refresh = function() { browseEventList(instanceId); }
            GhostOsint.fetchData('${docroot}/scansummary', {'id': instanceId, 'by': 'type'}, function(data) {
                            var table = "<table id='scansummary-content' class='table table-bordered table-striped tablesorter'>";
                            table += "<thead><tr> <th>类型</th><th>唯一数据元素</th> <th>数据元素总数</th><th>最后数据元素时间</th></tr></thead><tbody>";
                            for (var i = 0; i < data.length; i++) {
                                table += "<tr><td><a class='link' onClick='";
                                table += "browseEventData(\"${id}\", \"" + escape(data[i][1]) + "\", \"" + data[i][0] + "\", \"full\");'>";
                                table += data[i][1] + "</a></td>";
                                table += "<td>" + data[i][4] + "</td>";
                                table += "<td>" + data[i][3] + "</td>";
                                table += "<td>" + data[i][2] + "</td>";
                            }
                            table += "</tbody></table>"

                            if (data.length < 1) {
                                table = "<div id='scansummary-content' class='alert alert-warning'><h4>没有数据.</h4>如果扫描正在运行，那么请等会儿再试.</div>";
                            }

                            $("#loader").fadeOut(500);
                            $("#mainbody").append(table);
                            $("#scansummary-content").tablesorter();
            });
        }

        // Detailed view of data for an event type for a scan
        function browseEventData(instanceId, eventTypeLabel, eventType, format, filterFP) {
            if (filterFP === 'undefined') {
                filterFP = false;
            }
            $("#scansummary-content").remove();
            $("#scanlogs-content").remove();
            $("#breadcrumbs").remove();
            $("#loader").show();
            navTo("btn-browse");
            $("#btn-export").show();
            $("#btn-download-logs").hide();
            $("#btn-refresh").show();
            $("#btn-search").show();
            $("#customtabview").show();
            $("#scanreminder").hide();
            currentType = eventType;
            currentTypeName = eventTypeLabel;
            refresh = function() { browseEventData(instanceId, eventTypeLabel, eventType, format, filterFP); }
            browseUpdate = function(newformat) { browseEventData(instanceId, eventTypeLabel, eventType, newformat, filterFP); }

            if (format == 'full') {
                $("#btn-fullview").addClass("active");
                $("#btn-uniqueview").removeClass("active");
                $("#btn-vizview").removeClass("active");
                $("#modifyactions").show();
                GhostOsint.fetchData('${docroot}/scaneventresults', {'id': instanceId, 'eventType': eventType }, function(data) {
                            totalcount = 0;
                            fpcount = 0;
                            for (var i = 0; i < data.length; i++) {
                                totalcount++;
                                if (data[i][8] == "1") {
                                    fpcount++;
                                }
                            }
                            var crumbs = " <ul class='breadcrumb' id='breadcrumbs'> <li><a class='link' onClick='browseEventList(\"" + instanceId + "\");'>浏览</a>";
                            crumbs += " <span class='divider'></span></li> <li><a class='link' onClick=";
                            crumbs += "'browseEventData(\"" + instanceId + "\",\"" + eventTypeLabel + "\",\"" + eventType + "\",\"";
                            crumbs += format + "\", " + filterFP + ");'>";
                            crumbs += unescape(eventTypeLabel) + "</a></li>";
                            if (fpcount > 0) {
                                crumbs += "<div class='pull-right text-center'><i class='glyphicon glyphicon-ban-circle'></i>&nbsp;&nbsp;隐藏 " + fpcount + " 误报: ";
                                crumbs += "<input class='vertical-align-top' type='checkbox' ";
                                crumbs += "onClick=\"browseEventData('" + instanceId + "', '" + eventTypeLabel +"', '" + eventType + "'";
                                crumbs += ",'" + format + "', ";
                                if (!filterFP) {
                                    fp = 1;
                                    ch = "";
                                } else {
                                    fp = 0;
                                    ch = "checked";
                                }
                                crumbs += fp + ")\" " + ch + "></input></div>";
                            }
                            crumbs += "</ul>";

                            var table = "<table id='scansummary-content' class='table table-bordered table-striped small tablesorter'>";
                            table += "<thead><tr>";
                            table += "<th class='text-center'><input id='checkall' type='checkbox' onClick='switchSelectAll()'></th>";
                            table += "<th>数据元素</th></th>";
                            table += "<th>源数据元素</th>";
                            table += "<th>源模块</th>";
                            table += "<th>已确定</th>";
                            table += "</tr></thead><tbody>";

                            for (var i = 0; i < data.length; i++) {
                                if (filterFP && data[i][8] == "1") {
                                    continue;
                                }
                                table += "<tr>";
                                table += "<td class='text-center'><input type='checkbox' id='cb_" + data[i][7] + "'>";
                                if (data[i][8] == "1") {
                                    table += "<br /><i class='glyphicon glyphicon-ban-circle' class='vertical-align-bottom' />";
                                }
                                table += "</td>";
                                table += "<td><pre class='table-border-bg-inherit'>";
                                //table += "<a href='${docroot}/entityinfo?id=" + data[i][7] + "'>" + data[i][1] + "</a>";
                                table += GhostOsint.replace_sfurltag(data[i][1]);
                                // for debug
                                //table += "</pre></td><td><pre class='table-border-bg-inherit'>" + data[i][7];
                                //table += "</pre></td><td><pre class='table-border-bg-inherit'>" + data[i][5];
                                //table += "</pre></td><td><pre class='table-border-bg-inherit'>" + data[i][6];
                                table += "</pre></td><td><pre class='table-border-bg-inherit'>";
                                table += GhostOsint.replace_sfurltag(data[i][2]);
                                table += "</pre></td><td><pre class='table-border-bg-inherit'>" + data[i][3];
                                table += "</pre></td><td><pre class='table-border-bg-inherit'>" + data[i][0];
                                table += "</pre></td>";
                                table += "</tr>";
                            }
                            table += "</tbody></table>"
                            $("#loader").fadeOut(500);
                            $("#mainbody").append(crumbs + table);
                            $("#scansummary-content").tablesorter({ headers: { 0: { sorter: false } } });
                            lastChecked = null;
                            var chkboxes = $('input[id*=cb_]');
                            chkboxes.click(function(e) {
                                if(!lastChecked) {
                                    lastChecked = this;
                                    return;
                                }

                                if(e.shiftKey) {
                                    var start = chkboxes.index(this);
                                    var end = chkboxes.index(lastChecked);

                                    chkboxes.slice(Math.min(start,end), Math.max(start,end)+ 1).prop('checked', lastChecked.checked);

                                }

                                lastChecked = this;
                            });

                });
            }

            if (format == 'unique') {
                $("#btn-uniqueview").addClass("active");
                $("#btn-fullview").removeClass("active");
                $("#btn-vizview").removeClass("active");
                if (filterFP == "0") {
                    filterFP = null;
                }
                GhostOsint.fetchData('${docroot}/scaneventresultsunique', {'id': instanceId, 'eventType': eventType, 'filterfp': filterFP }, function(data) {
                            var crumbs = " <ul class='breadcrumb' id='breadcrumbs'> <li><a class='link' onClick='browseEventList(\"" + instanceId + "\");'>浏览</a>";
                            crumbs += " <span class='divider'></span></li> <li><a class='link' onClick=";
                            crumbs += "'browseEventData(\"" + instanceId + "\",\"" + eventTypeLabel + "\",\"" + eventType + "\",\"" + format;
                            crumbs += "\", " + filterFP + ");'>";
                            crumbs += unescape(eventTypeLabel) + "</a></li>";
                            crumbs += "<div class='pull-right text-center'><i class='glyphicon glyphicon-ban-circle'></i>&nbsp;&nbsp;&nbsp;&nbsp;隐藏误报: ";
                            crumbs += "<input class='vertical-align-top' type='checkbox' ";
                            crumbs += "onClick=\"browseEventData('" + instanceId + "', '" + eventTypeLabel +"', '" + eventType + "'";
                            crumbs += ",'" + format + "', ";
                            if (!filterFP) {
                                fp = 1;
                                ch = "";
                            } else {
                                fp = 0;
                                ch = "checked";
                            }
                            crumbs += fp + ")\" " + ch + "></input></div>";
                            crumbs += "</ul>";

                            var table = "<table id='scansummary-content' class='table table-bordered table-striped small'>";
                            table += "<thead><tr> <th>唯一数据元素</th><th>事件</th></tr></thead><tbody>";
                            for (var i = 0; i < data.length; i++) {
                                table += "<tr><td><pre class='table-border-bg-inherit'>";
                                table += GhostOsint.replace_sfurltag(data[i][0]);
                                table += "</pre></td><td>" + data[i][2] + "</td>";
                                table += "</tr>";
                            }
                            table += "</tbody></table>"
                            $("#loader").fadeOut(500);
                            $("#mainbody").append(crumbs + table);
                });
            }

            if (format.indexOf('viz') == 0) {
                $("#btn-vizview").addClass("active");
                $("#btn-fullview").removeClass("active");
                $("#btn-uniqueview").removeClass("active");

                if (format.indexOf("viz-bubble") == 0) {
                    GhostOsint.fetchData('${docroot}/scaneventresults', {'id': instanceId, 'eventType': eventType }, function(data) {
                        var crumbs = " <ul class='breadcrumb' id='breadcrumbs'> <li><a class='link' onClick='browseEventList(\"" + instanceId + "\");'>浏览</a>";
                        crumbs += " <span class='divider'>;</span></li> <li><a class='link' onClick=";
                        crumbs += "'browseEventData(\"" + instanceId + "\",\"" + eventTypeLabel + "\",\"" + eventType + "\",\"" + format + "\");'>";
                        crumbs += unescape(eventTypeLabel) + "</a></li></ul>";
                        itemList = []
                        for (var i = 0; i < data.length; i++) {
                            if (format == "viz-bubble-source") {
                                itemList.push(GhostOsint.remove_sfurltag(data[i][2]));
                            }
                            if (format == "viz-bubble-data") {
                                itemList.push(GhostOsint.remove_sfurltag(data[i][1]));
                            }
                        }
                        $("#loader").fadeOut(500);
                        $("#mainbody").append(crumbs + "<div id='scansummary-content' class='text-center'></div>");
                        sf_viz_bubble("#scansummary-content", itemList)
                    });
                }

                if (format == "viz-dendro") {
                    GhostOsint.fetchData("${docroot}/scanelementtypediscovery", {'id': instanceId, 'eventType': eventType }, function(data) {
                        var crumbs = " <ul class='breadcrumb' id='breadcrumbs'> <li><a class='link' onClick='browseEventList(\"" + instanceId + "\");'>浏览</a>";
                        crumbs += " <span class='divider'></span></li> <li><a class='link' onClick=";
                        crumbs += "'browseEventData(\"" + instanceId + "\",\"" + eventTypeLabel + "\",\"" + eventType + "\",\"" + format + "\");'>";
                        crumbs += unescape(eventTypeLabel) + "</a></li></ul>";

                        $("#loader").fadeOut(500);
                        $("#mainbody").append(crumbs + "<div id='scansummary-content' class='text-center'></div>");
                        sf_viz_dendrogram("#scansummary-content", data);
                    });
                }
            }
        }

        function downloadLogs(instanceId) {
            $("#loader").show();
            GhostOsint.log("Loading logs for scan: " + instanceId);
            var efr = document.getElementById('exportframe');
            var urlBase = '${docroot}/scanexportlogs?id=';
            efr.src = urlBase + instanceId;
            $("#loader").fadeOut(500);
        }

        // Download the data currently being viewed
        function exportEventData(instanceId, eventType, fileType) {
            $("#loader").show();
            var efr = document.getElementById('exportframe');
            if (currentSection == "btn-search") {
                if (lastSearchType == null || lastSearchType == "ALL") {
                    type = "";
                } else {
                    type = lastSearchType;
                }
                if (fileType == "excel") {
                    var urlBase = '${docroot}/scansearchresultexport?filetype=excel&id=';
                } else {
                    var urlBase = '${docroot}/scansearchresultexport?id=';
                }
                efr.src = urlBase + instanceId + '&eventType=' + type + "&value=" + lastSearchQuery;
            }

            if (currentSection == "btn-browse") {
                if (fileType == "excel") {
                    var urlBase = '${docroot}/scaneventresultexport?filetype=excel&id=';
                } else {
                    var urlBase = '${docroot}/scaneventresultexport?id=';
                }
                efr.src = urlBase + instanceId + '&type=' + eventType;
            }

            if (currentSection == "btn-graph") {
                GhostOsint.log("Loading visualisation for scan: " + instanceId);
                efr.src = '${docroot}/scanviz?id=' + instanceId + '&gexf=1';
            }

            $("#loader").fadeOut(500);
        }

        // View the configuration that was used for this scan
        function viewScanConfig(instanceId) {
            $("#scansummary-content").remove();
            $("#scanlogs-content").remove();
            $("#loader").show();
            $("#btn-export").hide();
            $("#btn-download-logs").hide();
            $("#btn-refresh").show();
            $("#btn-search").hide();
            $("#scanreminder").hide();
            navTo("btn-info");
            refresh = function() { viewScanConfig(instanceId); }
            GhostOsint.fetchData('${docroot}/scanopts', {'id': instanceId}, function(data) {
                table = "<div id='scansummary-content'>";
                table += "<h4>源信息</h4>";
                table += "<table class='table table-bordered table-striped'>";
                table += "<tr><td>扫描名称:</td><td>" + data['meta'][0] + "</td></tr>";
                table += "<tr><td>内部ID:</td><td>${id}</td></tr>";
                table += "<tr><td>目标:</td><td>" + data['meta'][1] + "</td></tr>";
                table += "<tr><td>开始时间:</td><td>" + data['meta'][3] + "</td></tr>";
                table += "<tr><td>完成时间:</td><td>" + data['meta'][4] + "</td></tr>";
                table += "<tr><td>状态:</td><td>" + data['meta'][5] + "</td></tr>";
                table += "</table>";
                table += "<h4>全局设置</h4>";
                table += "<table class='table table-bordered table-striped' style='table-layout: fixed'>";
                table += "<thead><tr><th>选项</th><th>值</th></tr></thead><tbody>";
                for (var key in data['config']) {
                    if (key.indexOf(":") > 0) {
                        continue;
                    }
                    table += "<tr><td width=100%>" + data['configdesc'][key] + "</td><td>" + data['config'][key] + "</td></tr>";
                }
                table += "</table>";
                table += "<h4>模块设置</h4>";
                table += "<div class='table-responsive'><table class='table table-bordered table-striped' style='table-layout: fixed'>";
                table += "<thead><tr><th>模块</th> <th>选项</th> <th>值</th></tr></thead><tbody>";
                keys = [];
                for (var key in data['config']) {
                    keys.push(key);
                }
                keys_s = keys.sort();

                for (var i = 0; i < keys_s.length; i++) {
                    key = keys_s[i];
                    if (key.indexOf(":") > 0) {
                        bits = key.split(":");
                        table += "<tr><td>" + bits[0] + "</td><td>" + data['configdesc'][key] + "</td><td>" + data['config'][key] + "</td></tr>";
                    }
                }
                table += "</table></div></div>";

                $("#loader").fadeOut(500);
                $("#mainbody").append(table);
            });
        }

        if ("${status}" == "CREATED" || "${status}" == "RUNNING" || "${status}" == "STARTING" || "${status}" == "STARTED" || "${status}" == "UNKNOWN" || "${status}" == "INITIALIZING") {
            scanSummaryView("${id}");
        } else {
            browseEventList("${id}");
        }

        var refreshSummaryInterval;

        refreshSummary = function() {
            var status = document.getElementById("scanstatusbadge").innerHTML;

            if (status == "ERROR-FAILED" || status == "FINISHED" || status == "ABORTED") {
                GhostOsint.log("Scan is " + status);
                clearInterval(refreshSummaryInterval);
                return;
            }

            GhostOsint.log("Scan is " + status + ". Refreshing scan summary ...");

            for (var i = 0; i < dataloaders.length; i++) {
                if (!loadersrunning) {
                    loadersrunning = true;
                    dataloaders[i]();
                    loadersrunning = false;
                }
            }
        }

        refreshSummaryInterval = setInterval(refreshSummary, 5000);

    </script>
<iframe class="hidden" id='exportframe'></iframe>
<%include file="FOOTER.tmpl"/>
